FROM tiryoh/ros2-desktop-vnc:humble

# Install audio dependencies, LiDAR dependencies, and ROS2 packages
RUN apt-get update && apt-get install -y \
    portaudio19-dev \
    libasound2-dev \
    libportaudio2 \
    libportaudiocpp0 \
    ffmpeg \
    libgstreamer1.0-dev \
    libgstreamer-plugins-base1.0-dev \
    libgstreamer-plugins-good1.0-dev \
    gstreamer1.0-plugins-good \
    gstreamer1.0-plugins-bad \
    gstreamer1.0-plugins-ugly \
    gstreamer1.0-tools \
    python3-pip \
    python3-gst-1.0 \
    ros-humble-tf-transformations \
    python3-transforms3d \
    libyaml-cpp-dev \
    libpcap-dev \
    libasio-dev \
    git \
    && rm -rf /var/lib/apt/lists/*

# Install Python audio packages (build PyAudio from source for compatibility)
RUN pip3 install --upgrade pip && \
    pip3 install --no-cache-dir pyusb click pixel-ring spidev && \
    pip3 install --no-cache-dir pyaudio

# Clone diagnostic_updater from source
RUN mkdir -p /tmp/ros2_deps/src && cd /tmp/ros2_deps/src && \
    git clone https://github.com/ros/diagnostics.git && \
    cd /tmp/ros2_deps && \
    /bin/bash -c "source /opt/ros/humble/setup.bash && colcon build --symlink-install"

# Set up workspace for ReSpeaker and audio drivers
RUN mkdir -p /home/ubuntu/ros2_ws/src
WORKDIR /home/ubuntu/ros2_ws/src

# Clone audio_common for ROS2
RUN git clone -b ros2 https://github.com/ros-drivers/audio_common.git

# Clone respeaker_ros
RUN git clone https://github.com/hcrlab/respeaker_ros.git

# Clone RoboSense LiDAR SDK and message definitions
RUN git clone https://github.com/RoboSense-LiDAR/rslidar_sdk.git && \
    cd rslidar_sdk && \
    git submodule init && \
    git submodule update

# Clone RoboSense LiDAR ROS2 message definitions
RUN git clone https://github.com/RoboSense-LiDAR/rslidar_msg.git

# Clone Witmotion IMU ROS2 driver
WORKDIR /home/ubuntu/ros2_ws/src
RUN git clone https://github.com/ioio2995/witmotion_ros2.git
WORKDIR /home/ubuntu/ros2_ws

# Configure LiDAR type to RSHELIOS (Helios 32)
RUN sed -i 's/lidar_type: RSM1/lidar_type: RSHELIOS/' /home/ubuntu/ros2_ws/src/rslidar_sdk/config/config.yaml

# Configure Witmotion IMU serial port to /dev/ttyUSB0
RUN sed -i 's|/dev/ttyUSB1|/dev/ttyUSB0|' /home/ubuntu/ros2_ws/src/witmotion_ros2/config/witmotion.yaml

# Copy udev rules for ReSpeaker
RUN cp /home/ubuntu/ros2_ws/src/respeaker_ros/config/*.rules /etc/udev/rules.d/ || true

# Install Python dependencies for ReSpeaker (using consistent versions)
RUN pip3 install --no-cache-dir pyusb click pyaudio pixel-ring

# Install additional ROS2 dependencies and fix transforms3d compatibility
RUN apt-get update && apt-get install -y ros-humble-tf-transformations && rm -rf /var/lib/apt/lists/*
RUN pip3 install --no-cache-dir --ignore-installed transforms3d

# Build the workspace (build audio, LiDAR, and IMU packages)
WORKDIR /home/ubuntu/ros2_ws
RUN /bin/bash -c "source /opt/ros/humble/setup.bash && source /tmp/ros2_deps/install/setup.bash && colcon build --symlink-install --packages-select audio_common_msgs respeaker_ros audio_capture audio_play rslidar_msg rslidar_sdk witmotion_ros2"

# Source the workspace in bashrc in correct order
RUN echo "source /opt/ros/humble/setup.bash" >> /home/ubuntu/.bashrc && \
    echo "source /tmp/ros2_deps/install/setup.bash" >> /home/ubuntu/.bashrc && \
    echo "source /home/ubuntu/ros2_ws/install/setup.bash" >> /home/ubuntu/.bashrc

# Copy supervisor config for ROS2 sensor nodes
COPY scripts/ros2-sensors.conf /etc/supervisor/conf.d/ros2-sensors.conf

# Copy helper scripts
COPY scripts/vnc-startup.sh /usr/local/bin/vnc-startup.sh
COPY scripts/check-sensors.sh /usr/local/bin/check-sensors.sh
RUN chmod +x /usr/local/bin/vnc-startup.sh /usr/local/bin/check-sensors.sh

WORKDIR /workspace

EXPOSE 80 5901

# Use default CMD from base image (supervisord)
