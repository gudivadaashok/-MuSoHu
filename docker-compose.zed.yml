# Docker Compose for MuSoHu with ZED Camera Support
# This configuration uses the custom ZED-enabled Docker image
#
# Usage:
#   Build: docker compose -f docker-compose.zed.yml build
#   Run:   docker compose -f docker-compose.zed.yml up -d
#   Stop:  docker compose -f docker-compose.zed.yml down

services:
  ros2_vnc_zed:
    build:
      context: .
      dockerfile: Dockerfile.ros2.zed
    container_name: ros2_vnc_zed
    hostname: musohu-zed
    privileged: true
    runtime: nvidia  # Use 'nvidia' runtime for GPU access
    ports:
      - "6080:80"         # noVNC web interface
      - "5901:5901"       # VNC server
      - "6699:6699/udp"   # LiDAR MSOP port
      - "7788:7788/udp"   # LiDAR DIFOP port
    volumes:
      - .:/workspace
      - ~/Desktop/Docker-Volumns/ros2_workspace:/home/ubuntu/ros2_ws
      - ~/Desktop/Docker-Volumns/ros2_logs:/home/ubuntu/.ros/log
      - ~/Desktop/Docker-Volumns/user_data:/home/ubuntu/user_data
      # ZED AI models cache (optional but recommended)
      - ~/.zed_ai_models:/usr/local/zed/resources
    devices:
      # Audio device (ReSpeaker)
      - /dev/snd:/dev/snd
      # USB devices
      - /dev/bus/usb:/dev/bus/usb
      # IMU device (WitMotion)
      - /dev/ttyUSB0:/dev/ttyUSB0
      # ZED camera video devices
      - /dev/video0:/dev/video0
      - /dev/video1:/dev/video1
      # All devices (for ZED camera discovery)
      - /dev:/dev
    shm_size: 2gb  # Increased for ZED camera
    security_opt:
      - seccomp:unconfined
    restart: unless-stopped
    environment:
      - DISPLAY=:1
      - VNC_PASSWORD=ubuntu
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      # ZED camera settings
      - ZED_CAMERA_MODEL=zed2i  # Change to your model
    networks:
      - ros2_network

  # Optional: Separate ZED X configuration (GMSL2 cameras)
  # Uncomment if using ZED X
  # ros2_vnc_zedx:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.ros2.zed
  #   container_name: ros2_vnc_zedx
  #   hostname: musohu-zedx
  #   privileged: true
  #   runtime: nvidia
  #   ports:
  #     - "6080:80"
  #     - "5901:5901"
  #     - "6699:6699/udp"
  #     - "7788:7788/udp"
  #   volumes:
  #     - .:/workspace
  #     - ~/Desktop/Docker-Volumns/ros2_workspace:/home/ubuntu/ros2_ws
  #     - ~/Desktop/Docker-Volumns/ros2_logs:/home/ubuntu/.ros/log
  #     - ~/.zed_ai_models:/usr/local/zed/resources
  #     # ZED X specific volumes
  #     - /tmp:/tmp
  #     - /var/nvidia/nvcam/settings/:/var/nvidia/nvcam/settings/
  #     - /etc/systemd/system/zed_x_daemon.service:/etc/systemd/system/zed_x_daemon.service
  #   devices:
  #     - /dev:/dev
  #   shm_size: 2gb
  #   environment:
  #     - DISPLAY=:1
  #     - VNC_PASSWORD=ubuntu
  #     - NVIDIA_VISIBLE_DEVICES=all
  #     - NVIDIA_DRIVER_CAPABILITIES=all
  #     - ZED_CAMERA_MODEL=zedx
  #   networks:
  #     - ros2_network

  web_app:
    build:
      context: .
      dockerfile: Dockerfile.webapp
    container_name: musohu_webapp
    hostname: musohu-webapp
    ports:
      - "5001:5001"
    volumes:
      - .:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/Desktop/Docker-Volumns/app_logs:/app/logs
      - ~/Desktop/Docker-Volumns/app_data:/app/data
      - ~/Desktop/Docker-Volumns/user_data:/app/users
    depends_on:
      - ros2_vnc_zed
    restart: unless-stopped
    environment:
      - FLASK_ENV=development
      - FLASK_APP=ros2_script_manager/app.py
    networks:
      - ros2_network
    working_dir: /workspace

networks:
  ros2_network:
    driver: bridge

volumes:
  ros2_workspace:
    driver: local
  zed_ai_models:
    driver: local
